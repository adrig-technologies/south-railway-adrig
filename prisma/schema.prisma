generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  username        String            @unique
  password        String
  optimised       String            @default("notset")
  department      String?           @default("")
  manager         String?           @default("")
  phone           String?           @unique
  depot           String?           @default("")
  requests        Requests[]
  StagingRequests StagingRequests[]
}

model Otp {
  id        String   @id @default(uuid())
  email     String   @unique
  code      String
  createdAt DateTime @default(now())
  validTill DateTime
  phone     String?  @unique
}

model Manager {
  email      String            @unique
  password   String
  id         String            @id @default(uuid())
  department String?
  name       String?
  Requests   Requests[]
  requests   StagingRequests[]
  phone      String?           @unique
}

model StagingRequests {
  requestId                String   @id @default(dbgenerated("((to_char(CURRENT_TIMESTAMP, 'YYYYMMDD'::text) || '-'::text) || lpad((nextval('request_id_seq'::regclass))::text, 6, '0'::text))"))
  date                     String
  selectedDepartment       String
  selectedSection          String
  stationID                String
  missionBlock             String
  workType                 String
  workDescription          String
  selectedLine             Json
  selectedStream           String?
  cautionRequired          String
  cautionSpeed             String
  cautionLocationFrom      String
  cautionLocationTo        String
  workLocationFrom         String
  workLocationTo           String
  demandTimeFrom           String
  demandTimeTo             String
  sigDisconnection         String
  ohDisconnection          String?
  oheDisconnection         String?
  elementarySectionFrom    String
  elementarySectionTo      String
  sigElementarySectionFrom String
  sigElementarySectionTo   String
  repercussions            String
  otherLinesAffected       Json
  requestremarks           String
  createdAt                DateTime @default(now())
  userId                   String?
  managerId                String?
  status                   String?
  selectedDepo             String?
  sigResponse              String? @default("no")
  Manager                  Manager? @relation(fields: [managerId], references: [id])
  User                     User?    @relation(fields: [userId], references: [id])
}

model Requests {
  requestId                String   @id @default(dbgenerated("((to_char(CURRENT_TIMESTAMP, 'YYYYMMDD'::text) || '-'::text) || lpad((nextval('request_id_seq'::regclass))::text, 6, '0'::text))"))
  date                     String
  selectedDepartment       String
  selectedSection          String
  stationID                String
  missionBlock             String
  workType                 String
  workDescription          String
  cautionRequired          String
  cautionSpeed             String
  cautionLocationFrom      String
  cautionLocationTo        String
  workLocationFrom         String
  workLocationTo           String
  demandTimeFrom           String
  demandTimeTo             String
  sigDisconnection         String
  ohDisconnection          String?
  oheDisconnection         String?
  elementarySectionFrom    String
  elementarySectionTo      String
  userId                   String?
  sigElementarySectionFrom String
  sigElementarySectionTo   String
  repercussions            String
  requestremarks           String
  createdAt                DateTime @default(now())
  selectedStream           String?
  selectedLine             Json
  otherLinesAffected       Json
  managerId                String?
  selectedDepo             String?
  sigResponse              String? @default("no")
  Manager                  Manager? @relation(fields: [managerId], references: [id])
  User                     User?    @relation(fields: [userId], references: [id])
}

model Sanctiontable {
  id                       String  @id @default(cuid())
  requestId                String  @unique
  date                     String
  selectedDepartment       String
  selectedSection          String
  stationID                String
  missionBlock             String
  workType                 String
  workDescription          String
  selectedLine             String
  cautionRequired          String
  cautionSpeed             String
  cautionLocationFrom      String
  cautionLocationTo        String
  workLocationFrom         String
  workLocationTo           String
  demandTimeFrom           String
  demandTimeTo             String
  sigDisconnection         String
  ohDisconnection          String?
  oheDisconnection         String?
  elementarySectionFrom    String
  elementarySectionTo      String
  userId                   String?
  action                   String  @default("none")
  remarks                  String?
  sigElementarySectionFrom String
  sigElementarySectionTo   String
  repercussions            String
  requestremarks           String
  final                    String?
  Optimisedtimefrom        String?
  Optimisedtimeto          String?
  optimization_details     String?
  selectedStream           String?
  otherLinesAffected       Json?
  managerId                String?
  selectedDepo             String?
  sigResponse              String? @default("no")
  status                   String   @default("in progress")
}
